[comment encoding = UTF-8 /]
[module StatemachineHandlers('http://www.eclipse.org/uml2/5.0.0/UML')]

[import net::ziegelmeier::statemachine::uml::gen::cpp::main::StatemachineQueries/]

[template public generateHandlers(aStatemachine : StateMachine)]
[file (aStatemachine.name.concat('Handlers.hxx'), false, 'UTF-8')]
// Statemachine [aStatemachine.name/] handlers
// Include this file in .cxx or in .hxx below Owner declaration

#pragma once

[aStatemachine.region.generateRegion(aStatemachine)/]
[/file]
[/template]

[comment --------------------------------------------------- /]

[template private generateRegion(aRegion : Region, aStatemachine : StateMachine)]
[aRegion.eContents(Vertex).generateVertex(aStatemachine)/]
[/template]

[template private generateVertex(aState : Vertex, aStatemachine : StateMachine)]
[/template]

[template private generateVertex(aState : State, aStatemachine : StateMachine)]
// State [aState.name/]
[let aFunctionName : String = aStatemachine.name + aState.name + 'Handler']
[aStatemachine.getTransitionType()/] [aStatemachine.getOwnerType()/]::[aFunctionName/]([aStatemachine.getStatePtrType()/] /* state */, [aStatemachine.getEventType()/] event)
{
    // [protected (aFunctionName)]

    // To be implemented

    // [/protected]
}
[/let]
[if (not aState.entry.oclIsUndefined())]

[aState.entry.generateEntryExit(aState, aStatemachine, 'Entry')/]
[/if]
[if (not aState.exit.oclIsUndefined())]

[aState.exit.generateEntryExit(aState, aStatemachine, 'Exit')/]
[/if]

[aState.eContents(Region).generateRegion(aStatemachine)/]
[/template]

[template private generateEntryExit(aBehavior : Behavior, aState : State, aStatemachine : StateMachine, kind : String)]
[let aFunctionName : String = aStatemachine.name + aState.name + kind]
void [aStatemachine.getOwnerType()/]::[aFunctionName/]([aStatemachine.getStatePtrType()/] /* state */)
{
    // [protected (aFunctionName)]

    // To be implemented

    // [/protected]
}
[/let]
[/template]

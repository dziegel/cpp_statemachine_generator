[comment encoding = UTF-8 /]
[module StatemachineDeclarations('http://www.eclipse.org/uml2/5.0.0/UML')]

[import net::ziegelmeier::statemachine::uml::gen::cpp::main::StatemachineQueries/]

[template public generateDeclaration(aStatemachine : StateMachine)]
[file (aStatemachine.name.concat('Declaration.hxx'), false, 'UTF-8')]
// Statemachine [aStatemachine.name/] declaration
// Include this file in .hxx before Owner declaration
//
// Before including this header, add the following using declaration in your file:
// class MyClassContainingThisStatemachine;
// using [aStatemachine.name/]Base = moldau::event_framework::Statemachine<MyClassContainingThisStatemachine, const moldau::event_framework::Signal::SPtr&>;

#pragma once

class [aStatemachine.name/] : public [aStatemachine.name/]Base
{
public:
[aStatemachine.region.generateRegion()/]
};
[/file]
[/template]

[comment --------------------------------------------------- /]

[template private generateRegion(aRegion : Region)]
[aRegion.eContents(Vertex).generateVertex()/]
[/template]

[template private generateVertex(aState : Vertex)]
[/template]

[template private generateVertex(aState : State)]
    // State [aState.name/]
    static State [aState.getStateVariable()/];
[aState.getExternalTransitions().generateTransition()/]
[aState.getInternalTransitions().generateInternalTransition()/]
[aState.eContents(Region).generateRegion()/]
[/template]

[template private generateTransition(aTransition : Transition)]
[aTransition.generateTransitionRecursive(aTransition)/]
[/template]

[template private generateTransitionRecursive(aTransition : Transition, aStartTransition : Transition)]
[if (aTransition.target.oclIsKindOf(State))]
    static Transition [aTransition.getTransitionVariable(aStartTransition)/];
[elseif (aTransition.target.oclIsTypeOf(Pseudostate) and aTransition.target.oclAsType(Pseudostate).kind = PseudostateKind::choice)][aTransition.target.oclAsType(Pseudostate).outgoing.generateTransitionRecursive(aStartTransition)/][/if]
[/template]

[template private generateInternalTransition(aTransition : Transition)]
    static Transition [aTransition.getTransitionVariable(aTransition)/];

[/template]

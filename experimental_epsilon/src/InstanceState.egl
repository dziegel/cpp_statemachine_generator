[%
  var handlerTemplate : Template = TemplateFactory.load("InstanceHandler.egl");
  handlerTemplate.populate("state", state);
  handlerTemplate.populate("statemachine", statemachine);
%]
// State [%=state.name%]
const [%=statemachine.name%]::[%=statemachine.state_type%] [%=statemachine.name%]::[%=state.variable_name%]("[%=state.name%]",
    &[%=state.name%]Handler, // Handler
    [%=state.parent_variable_pointer%], // Parent
    [%=state.initial_variable_pointer%], // Initial
    [%=state.entry_pointer%], // Entry
    [%=state.exit_pointer%]); // Exit

[%
  for (transition in state.transitions) {
    if (transition.actions.isEmpty()) {
%]
const [%=statemachine.name%]::[%=statemachine.transition_type%] [%=statemachine.name%]::[%=transition.variable_name%]([%=transition.target_variable_name%]);
[%
    } else {
%]
const [%=statemachine.name%]::[%=statemachine.transition_action_type%] [%=statemachine.name%]::[%=transition.actions_variable_name%][] = {[%=transition.actions_list%]};
const [%=statemachine.name%]::[%=statemachine.transition_type%] [%=statemachine.name%]::[%=transition.variable_name%]([%=transition.target_variable_name%], [%=transition.actions_variable_name%]);
[%
    }
  }
%]

[%=handlerTemplate.process()%]
[%
  if (state.region.isDefined()) {
    var regionTemplate : Template = TemplateFactory.load("InstanceRegion.egl");
    regionTemplate.populate("region", state.region);
    regionTemplate.populate("statemachine", statemachine);
%]
[%=regionTemplate.process()%]
[%
  }
%]

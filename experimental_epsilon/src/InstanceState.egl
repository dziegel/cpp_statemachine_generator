[%
  import "Operations.egl";

  var regionTemplate : Template = TemplateFactory.load("InstanceRegion.egl");
  var transitionVariableTemplate : Template = TemplateFactory.load("InstanceTransitionVariable.egl");
  var handlerTemplate : Template = TemplateFactory.load("InstanceHandler.egl");
  handlerTemplate.populate("state", state);
  handlerTemplate.populate("sm", sm);

  var parent = "nullptr";
  if (state.container.state != null) {
  	parent = "&k" + state.container.state.name;
  }
  
  var initial = "nullptr";
  if (not state.regions.empty) {
    var initial_state = state.regions.first.getInitialState();
    if (initial_state != null) {
	  initial = "&k" + initial_state.outgoing.first.target.name;
    }
  }

  var entry = "nullptr";
  if (state.entry != null) {
  	entry = "&" + sm.name + "::Impl::" + state.entry.name;
  }

  var exit = "nullptr";
  if (state.exit != null) {
  	exit = "&" + sm.name + "::Impl::" + state.exit.name;
  }
%]
// State [%=state.name%]
const [%=state.getStateType(sm)%] [%=sm.name%]::k[%=state.name%]("[%=state.name%]",
    &[%=state.name%]Handler, // Handler
    [%=parent%], // Parent
    [%=initial%], // Initial
    [%=entry%], // Entry
    [%=exit%]); // Exit

[%
  for (outgoing_transition in state.getOutgoingTransitions()) {
    transitionVariableTemplate.populate("actions", new List());
    transitionVariableTemplate.populate("start_transition", outgoing_transition);
    transitionVariableTemplate.populate("transition", outgoing_transition);
    transitionVariableTemplate.populate("state", state);
    transitionVariableTemplate.populate("sm", sm);
%]
[%=transitionVariableTemplate.process()%]
[%
  }
%]

[%=handlerTemplate.process()%]
[%
  for (sub_region in state.regions) {
    regionTemplate.populate("region", sub_region);
    regionTemplate.populate("sm", sm);
%]
[%=regionTemplate.process()%]
[%
  }
%]

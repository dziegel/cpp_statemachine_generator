[%
// Parse model and transform it to model-independent Tuples (TODO: Use Emfatic)

operation t_scxml getModel() : Tuple {
  var result = new Tuple();
  result.name = self.a_name;
  
  var region = new Tuple();
  result.region = region;
  region.initial_id = self.a_initial;
  region.initial_history = false;

  region.states = new List();  
  for (state in self.c_state) {
    region.states.add(state.getModel());
  }
  
  return result;
}

operation t_state getModel() : Tuple {
  var result = new Tuple();
  result.name = self.a_id;
  result.id = self.a_id;

  if (self.e_onentry.isDefined() and self.e_onentry.e_script.isDefined()) {
  	result.entry = self.e_onentry.e_script.a_src;
  }

  if (self.e_onexit.isDefined() and self.e_onexit.e_script.isDefined()) {
  	result.exit = self.e_onexit.e_script.a_src;
  }
  
  if (not self.c_state.isEmpty()) {
    var region = new Tuple();  
    result.region = region;

    if (self.e_initial.isDefined() and self.e_initial.e_transition.isDefined()) {
      region.initial_id = self.e_initial.e_transition.a_target;
      region.initial_history = false;
    }
    if (self.e_history.isDefined() and self.e_history.e_transition.isDefined()) {
      region.initial_id = self.e_history.e_transition.a_target;
      region.initial_history = true;
    }
    
    region.states = new List();
    for (state in self.c_state) {
      var state_model = state.getModel();
      state_model.parent_state_id = result.id;
      region.states.add(state_model);
    }
  }

  result.transitions = new List();
  for (transition in self.c_transition.sortBy(t | t.getSortKey())) {
    var t = transition.getModel();
    t.start = result.name;
    result.transitions.add(t);
  }
    
  return result;
}

operation t_transition getModel() : Tuple {
  var result = new Tuple();
  
  result.target_state_id = self.a_target;
  result.internal = (self.a_type = "internal");
  result.trigger = self.a_event;

  result.actions = new List();
  for (script in self.c_script) {
    result.actions.add(script.a_src);
  }

  result.guards = new List();
  if (self.a_cond.isDefined()) {
    result.guards.add(self.a_cond);
  }
  
  return result;
}

operation t_transition getSortKey() : String {
  if ((not self.a_cond.isDefined()) or (self.a_cond = "else")) {
    return "999999-";
  }
  return "0" + self.a_cond;
}
%]		